{"version":3,"sources":["p__User__Login__index-async.17203524568052775960.hot-update.js","src/pages/User/Login/index.tsx"],"sourcesContent":["globalThis.makoModuleHotUpdate(\n  'p__User__Login__index',\n  {\n    modules: {},\n  },\n  function (runtime) {\n    runtime._h='9128080734524446433';\nruntime.updateEnsure2Map({\"src/.umi/core/EmptyRoute.tsx\":[\"src/.umi/core/EmptyRoute.tsx\"],\"src/.umi/plugin-layout/Layout.tsx\":[\"src/.umi/plugin-layout/Layout.tsx\"],\"src/.umi/plugin-openapi/openapi.tsx\":[\"src/.umi/plugin-openapi/openapi.tsx\",\"vendors\"],\"src/pages/404.tsx\":[\"p__404\"],\"src/pages/TableList/index.tsx\":[\"p__TableList__index\"],\"src/pages/User/Login/index.tsx\":[\"p__User__Login__index\"],\"src/pages/Welcome.tsx\":[\"p__Welcome\"]});;\n  },\n);\n","import { Footer } from '@/components';\nimport { login } from '@/services/ant-design-pro/api';\nimport { getFakeCaptcha } from '@/services/ant-design-pro/login';\nimport {\n  AlipayCircleOutlined,\n  LockOutlined,\n  MobileOutlined,\n  TaobaoCircleOutlined,\n  UserOutlined,\n  WeiboCircleOutlined,\n} from '@ant-design/icons';\nimport {\n  LoginForm,\n  ProFormCaptcha,\n  ProFormCheckbox,\n  ProFormText,\n} from '@ant-design/pro-components';\nimport { FormattedMessage, Helmet, history, SelectLang, useIntl, useModel } from '@umijs/max';\nimport { Alert, message, Modal, Tabs } from 'antd';\nimport { createStyles } from 'antd-style';\nimport React, { useState } from 'react';\nimport { flushSync } from 'react-dom';\nimport Settings from '../../../../config/defaultSettings';\n\nconst useStyles = createStyles(({ token }) => {\n  return {\n    action: {\n      marginLeft: '8px',\n      color: 'rgba(0, 0, 0, 0.2)',\n      fontSize: '24px',\n      verticalAlign: 'middle',\n      cursor: 'pointer',\n      transition: 'color 0.3s',\n      '&:hover': {\n        color: token.colorPrimaryActive,\n      },\n    },\n    lang: {\n      width: 42,\n      height: 42,\n      lineHeight: '42px',\n      position: 'fixed',\n      right: 16,\n      borderRadius: token.borderRadius,\n      ':hover': {\n        backgroundColor: token.colorBgTextHover,\n      },\n    },\n    container: {\n      display: 'flex',\n      flexDirection: 'column',\n      height: '100vh',\n      overflow: 'auto',\n      backgroundImage:\n        \"url('https://mdn.alipayobjects.com/yuyan_qk0oxh/afts/img/V-_oS6r-i7wAAAAAAAAAAAAAFl94AQBr')\",\n      backgroundSize: '100% 100%',\n    },\n  };\n});\n\nconst ActionIcons = () => {\n  const { styles } = useStyles();\n\n  return (\n    <>\n      <AlipayCircleOutlined key=\"AlipayCircleOutlined\" className={styles.action} />\n      <TaobaoCircleOutlined key=\"TaobaoCircleOutlined\" className={styles.action} />\n      <WeiboCircleOutlined key=\"WeiboCircleOutlined\" className={styles.action} />\n    </>\n  );\n};\n\nconst Lang = () => {\n  const { styles } = useStyles();\n\n  return (\n    <div className={styles.lang} data-lang>\n      {SelectLang && <SelectLang />}\n    </div>\n  );\n};\n\nconst LoginMessage: React.FC<{\n  content: string;\n}> = ({ content }) => {\n  return (\n    <Alert\n      style={{\n        marginBottom: 24,\n      }}\n      message={content}\n      type=\"error\"\n      showIcon\n    />\n  );\n};\n\nconst Login: React.FC = () => {\n  const [userLoginState, setUserLoginState] = useState<API.LoginResult>({});\n  const [type, setType] = useState<string>('account');\n  const { initialState, setInitialState } = useModel('@@initialState');\n  const [showModal, setShowModal] = useState(false);\n  const { styles } = useStyles();\n  const intl = useIntl();\n\n  const fetchUserInfo = async () => {\n    const userInfo = await initialState?.fetchUserInfo?.();\n    if (userInfo) {\n      flushSync(() => {\n        setInitialState((s) => ({\n          ...s,\n          currentUser: userInfo,\n        }));\n      });\n    }\n  };\n\n  const handleSubmit = async (values: API.LoginParams) => {\n    try {\n      // 登录\n      const msg = await login({ ...values, type });\n      if (msg.status === 'ok') {\n        const defaultLoginSuccessMessage = intl.formatMessage({\n          id: 'pages.login.success',\n          defaultMessage: '登录成功！',\n        });\n        message.success(defaultLoginSuccessMessage);\n        await fetchUserInfo();\n        const urlParams = new URL(window.location.href).searchParams;\n        history.push(urlParams.get('redirect') || '/');\n        return;\n      }\n      console.log(msg);\n      // 如果失败去设置用户错误信息\n      setUserLoginState(msg);\n    } catch (error) {\n      const defaultLoginFailureMessage = intl.formatMessage({\n        id: 'pages.login.failure',\n        defaultMessage: '登录失败，请重试！',\n      });\n      console.log(error);\n      message.error(defaultLoginFailureMessage);\n    }\n  };\n  const { status, type: loginType } = userLoginState;\n\n  return (\n    <div className={styles.container}>\n      <Helmet>\n        <title>\n          {intl.formatMessage({\n            id: 'menu.login',\n            defaultMessage: '登录页',\n          })}\n          {Settings.title && ` - ${Settings.title}`}\n        </title>\n      </Helmet>\n      <Lang />\n      <div\n        style={{\n          flex: '1',\n          padding: '32px 0',\n        }}\n      >\n        <LoginForm\n          contentStyle={{\n            minWidth: 280,\n            maxWidth: '75vw',\n          }}\n          logo={<img alt=\"logo\" src=\"/logo.svg\" />}\n          title=\"淘小宝\"\n          subTitle={\"淘小宝，品质生活从这里开始！\"}\n          initialValues={{\n            autoLogin: true,\n          }}\n          // actions={[\n          //   <FormattedMessage\n          //     key=\"loginWith\"\n          //     id=\"pages.login.loginWith\"\n          //     defaultMessage=\"其他登录方式\"\n          //   />,\n          //   <ActionIcons key=\"icons\" />,\n          // ]}\n          onFinish={async (values) => {\n            await handleSubmit(values as API.LoginParams);\n          }}\n        >\n          <Tabs\n            activeKey={type}\n            onChange={setType}\n            centered\n            items={[\n              {\n                key: 'account',\n                label: intl.formatMessage({\n                  id: 'pages.login.accountLogin.tab',\n                  defaultMessage: '账户密码登录',\n                }),\n              },\n              {\n                key: 'mobile',\n                label: intl.formatMessage({\n                  id: 'pages.login.phoneLogin.tab',\n                  defaultMessage: '手机号登录',\n                }),\n              },\n            ]}\n          />\n\n          {status === 'error' && loginType === 'account' && (\n            <LoginMessage\n              content={intl.formatMessage({\n                id: 'pages.login.accountLogin.errorMessage',\n                defaultMessage: '账户或密码错误(admin/ant.design)',\n              })}\n            />\n          )}\n          {type === 'account' && (\n            <>\n              <ProFormText\n                name=\"username\"\n                fieldProps={{\n                  size: 'large',\n                  prefix: <UserOutlined />,\n                }}\n                placeholder={intl.formatMessage({\n                  id: 'pages.login.username.placeholder',\n                  defaultMessage: '用户名: admin or user',\n                })}\n                rules={[\n                  {\n                    required: true,\n                    message: (\n                      <FormattedMessage\n                        id=\"pages.login.username.required\"\n                        defaultMessage=\"请输入用户名!\"\n                      />\n                    ),\n                  },\n                ]}\n              />\n              <ProFormText.Password\n                name=\"password\"\n                fieldProps={{\n                  size: 'large',\n                  prefix: <LockOutlined />,\n                }}\n                placeholder={intl.formatMessage({\n                  id: 'pages.login.password.placeholder',\n                  defaultMessage: '密码: ant.design',\n                })}\n                rules={[\n                  {\n                    required: true,\n                    message: (\n                      <FormattedMessage\n                        id=\"pages.login.password.required\"\n                        defaultMessage=\"请输入密码！\"\n                      />\n                    ),\n                  },\n                ]}\n              />\n            </>\n          )}\n\n          {status === 'error' && loginType === 'mobile' && <LoginMessage content=\"验证码错误\" />}\n          {type === 'mobile' && (\n            <>\n              <ProFormText\n                fieldProps={{\n                  size: 'large',\n                  prefix: <MobileOutlined />,\n                }}\n                name=\"mobile\"\n                placeholder={intl.formatMessage({\n                  id: 'pages.login.phoneNumber.placeholder',\n                  defaultMessage: '手机号',\n                })}\n                rules={[\n                  {\n                    required: true,\n                    message: (\n                      <FormattedMessage\n                        id=\"pages.login.phoneNumber.required\"\n                        defaultMessage=\"请输入手机号！\"\n                      />\n                    ),\n                  },\n                  {\n                    pattern: /^1\\d{10}$/,\n                    message: (\n                      <FormattedMessage\n                        id=\"pages.login.phoneNumber.invalid\"\n                        defaultMessage=\"手机号格式错误！\"\n                      />\n                    ),\n                  },\n                ]}\n              />\n              <ProFormCaptcha\n                fieldProps={{\n                  size: 'large',\n                  prefix: <LockOutlined />,\n                }}\n                captchaProps={{\n                  size: 'large',\n                }}\n                placeholder={intl.formatMessage({\n                  id: 'pages.login.captcha.placeholder',\n                  defaultMessage: '请输入验证码',\n                })}\n                captchaTextRender={(timing, count) => {\n                  if (timing) {\n                    return `${count} ${intl.formatMessage({\n                      id: 'pages.getCaptchaSecondText',\n                      defaultMessage: '获取验证码',\n                    })}`;\n                  }\n                  return intl.formatMessage({\n                    id: 'pages.login.phoneLogin.getVerificationCode',\n                    defaultMessage: '获取验证码',\n                  });\n                }}\n                name=\"captcha\"\n                rules={[\n                  {\n                    required: true,\n                    message: (\n                      <FormattedMessage\n                        id=\"pages.login.captcha.required\"\n                        defaultMessage=\"请输入验证码！\"\n                      />\n                    ),\n                  },\n                ]}\n                onGetCaptcha={async (phone) => {\n                  const result = await getFakeCaptcha({\n                    phone,\n                  });\n                  if (!result) {\n                    return;\n                  }\n                  message.success('获取验证码成功！验证码为：1234');\n                }}\n              />\n            </>\n          )}\n          <div\n            style={{\n              marginBottom: 24,\n            }}\n          >\n            <ProFormCheckbox noStyle name=\"autoLogin\">\n              <FormattedMessage id=\"pages.login.rememberMe\" defaultMessage=\"自动登录\" />\n            </ProFormCheckbox>\n            <a\n              style={{\n                float: 'right',\n              }}\n            >\n              没有账号去注册->\n              {/* <FormattedMessage id=\"pages.login.forgotPassword\" defaultMessage=\"忘记密码\" /> */}\n            </a>\n          </div>\n          <ProFormCheckbox noStyle name=\"agreeTerms\">\n            我已阅读并同意\n            <a onClick={() => setShowModal(true)} style={{ color: '#1890ff', cursor: 'pointer' }}>\n              《用户隐私保护权限》\n            </a>\n          </ProFormCheckbox>\n        </LoginForm>\n      </div>\n      <Modal\n        title=\"用户隐私保护权限\"\n        visible={showModal}\n        onCancel={() => setShowModal(false)}\n        footer={null}\n      >\n        <p>这里是用户隐私保护权限的内容。</p>\n        <p>您可以在这里添加详细的条款和条件。</p>\n      </Modal>\n      {/* <Footer /> */}\n    </div>\n  );\n};\n\nexport default Login;\n"],"names":[],"mappings":"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"}